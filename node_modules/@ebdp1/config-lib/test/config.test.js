const { expect } = require('chai');
const Config = require('../src/config');

/* eslint-disable no-undef */
describe('Config', () => {
  describe('Config', () => {
    describe('Config instance', () => {
      it('should be instance of Config', () => {
        const config = new Config();
        expect(config).to.be.instanceof(Config);
      });
    });

    describe('#constructor', () => {
      it('should return instance of Config with default env local if it is not define', () => {
        process.env.NODE_ENV = '';
        const config = new Config();
        expect(config.get('env')).to.be.equal('local');
      });
      it('should return instance of Config with env which was passed to ENV variable', () => {
        const mockedNodeEnv = 'someNodeEnv';
        process.env.NODE_ENV = mockedNodeEnv;
        const config = new Config();
        expect(config.get('env')).to.be.equal(mockedNodeEnv);
      });
      it('should empty object if path to config is bad', () => {
        const config = new Config();
        expect(config.get('logger')).to.be.eql(undefined);
      });
    });
  });
});
